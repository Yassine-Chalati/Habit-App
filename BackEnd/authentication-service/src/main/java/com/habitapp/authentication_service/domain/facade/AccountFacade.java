package com.habitapp.authentication_service.domain.facade;

import com.habitapp.authentication_service.domain.exception.account.*;
import com.habitapp.authentication_service.domain.exception.account.RoleNotDefinedException;
import com.habitapp.authentication_service.domain.exception.account.RoleNotFoundException;
import com.habitapp.authentication_service.domain.exception.account.RolePrefixException;
import com.habitapp.authentication_service.dto.account.*;
import com.habitapp.authentication_service.proxy.exception.common.*;
import com.habitapp.profile_service.domain.entity.Individual;

public interface AccountFacade {
    public void createIndividualAccountWithDefaultMethod(AccountAndInformationDTO account) throws EmailPatternNotValidException, PasswordPatternNotValidException, EmailNotFoundException, PasswordNotFoundException, UrlConfigurationNotFoundException, AccountAlreadyExistsException, RoleNotFoundException, RolePrefixException, RoleNotDefinedException, AccountNotCreatedException, PermissionPrefixException, PermissionNotDefinedException, UnexpectedException, UnauthorizedException, UnprocessableEntityException, ForbiddenException, InternalServerErrorException;
    public AccountIdAndAuthoritiesDTO activateTheIndividualAccountCreatedByDefaultMethod(AccountEmailAndActivationTokenDTO accountEmailAndActivationTokenDTO) throws EmailNotFoundException, VerificationTokenNotFoundException, EmailPatternNotValidException, VerificationTokenPatternNotValidException, AccountNotFoundException, VerificationTokenDurationExpiredException, AccountIsActivatedException, VerificationTokensNotEqualsException;
    //public AccountEmailAndUrlDTO generateActivationUrlForAccountCreatedByDefaultMethod(String email) throws UrlConfigurationNotFoundException, EmailNotFoundException, EmailPatternNotValidException, AccountNotFoundException, VerificationTokenException, VerificationTokenNotRegeneratedYetException;
    public void updateIndividualAccountWithDefaultMethod(AccountAndInformationDTO account) throws PasswordPatternNotValidException, PasswordNotFoundException, AccountNotFoundException, UnexpectedException, UnauthorizedException;

}
